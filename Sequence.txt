from sklearn.naive_bayes import GaussianNB
gnb=GaussianNB()
gnb.fit(qtrain,ytrain)
predy=gnb.predict(qtest)
from sklearn.metrics import accuracy_score
print(accuracy_score(ytest,predy))



from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import GridSearchCV
parameters = {'n_neighbors': np.array([1,3,5,7,9])}
knn = KNeighborsClassifier()
cv = GridSearchCV(knn, param_grid=parameters,cv=5,scoring='roc_auc')
cv.fit(cpBdataFrame,y)
print(cv.cv_results_  )

print(cv.best_params_)

print(cv.best_score_)
print(cv.best_estimator_)


from sklearn.ensemble import RandomForestClassifier
rf = RandomForestClassifier(random_state=2019,max_features=cpBdataFrame.shape[1],oob_score=True)
rf.fit(qtrain,ytrain)
predy=rf.predict(qtest)
from sklearn.metrics import accuracy_score
print(accuracy_score(ytest,predy))


1.Naive Bayes
2.KNN(Offine selection)
3.Random Forest
4.Random Forest Tuning
5.Voting Classifier(offline selection)
6.GradientBoostingClassifier(offline selection)
7.Support Vector Machine
8.



identity', 'logistic', 'tanh', 'relu'
